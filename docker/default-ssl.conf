server {
	listen 80;
	listen [::]:80;
	server_name quickwp.stageserver4.men;
	return 301 https://$server_name$request_uri;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	ssl_certificate /etc/ssl/cloudflare-origin-certificate.pem;
	ssl_certificate_key /etc/ssl/cloudlare-private-key.pem;

	server_name quickwp.stageserver4.men;

	ssl_session_cache shared:SSL:20m;
	ssl_session_timeout 60m;
	ssl_prefer_server_ciphers on;
	ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/ssl/origin_ca_rsa_root.pem;
	resolver 1.1.1.1 8.8.8.8;

	client_max_body_size 256M;
	#include snippets/phpmyadmin.conf;
	include /etc/nginx/conf.d/*.conf;
	include snippets/headers.conf;
	include snippets/wp_attacks_security_settings.conf;
	include snippets/wordpress_security_settings.conf;


	#access_log /var/log/nginx/stage-access.log customuseragent;
	access_log /var/log/nginx/quickwp-access.log;
	error_log /var/log/nginx/quickwp-error.log;

	root /var/www/html/;
	index index.php index.html;

	charset UTF-8;
	# Set a cache skip variable, default 0. change to 1 for skipping cache
	set $skip_cache 1;
	# set default empty skip reason
	set $skip_reason "";

	# POST requests and urls with a query string should always go to PHP
	if ($request_method = POST) {
		set $skip_cache 0;
	}

	#if ($query_string != "") {
	#    set $skip_cache 1;
	#}   

	# Don’t cache uris containing the following segments
	if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml" ) {
		set $skip_cache 1;
	}

	# Don’t use the cache for logged in users or recent commenters
	if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in" ) {
		set $skip_cache 1;
	}

	# Don't cache 
	if ($request_uri ~* "/(cart|checkout|track-order|wishlist|my-account)/*$" ) {
		set $skip_cache 1;
	}
	# BEGIN Converter for Media
	set $ext_avif ".avif";
	if ($http_accept !~* "image/avif" ) {
		set $ext_avif "";
	}

	set $ext_webp ".webp";
	if ($http_accept !~* "image/webp" ) {
		set $ext_webp "";
	}

	# location ~ /wp-content/(?<path>.+)\.(?<ext>jpe?g|png|gif|webp)$ {
	# 	add_header Vary Accept;
	# 	expires 365d;
	# 	try_files /wp-content/uploads-webpc/$path.$ext$ext_avif
	# 		/wp-content/uploads-webpc/$path.$ext$ext_webp
	# 		$uri
	# 		=404;
	# }
	# END Converter for Media


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.php?$args;
		#try_files $cachefile $uri $uri/ /index.php?$args;		
	}

	location ~ \.php$ {
		include fastcgi_params;
		index index.php;
		include snippets/fastcgi-php.conf;
		fastcgi_param HTTPS on;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		fastcgi_intercept_errors on;
		fastcgi_read_timeout 600;
		fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
		fastcgi_cache_bypass $skip_cache;
		fastcgi_no_cache $skip_cache;
		fastcgi_cache quickwp;
		fastcgi_cache_key "$scheme$request_method$host$mobile_user$request_uri";
		#fastcgi_cache on;
		fastcgi_cache_valid 200 301 302 60m;
		fastcgi_cache_valid 404 1m;
		fastcgi_buffer_size 128k;
		fastcgi_buffers 256 4k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;
		fastcgi_max_temp_file_size 1M;
		fastcgi_cache_min_uses 1;
		fastcgi_cache_lock on;
		fastcgi_cache_revalidate on;
		fastcgi_cache_background_update on;
		fastcgi_pass_header Set-Cookie;
		fastcgi_pass_header Cookie;
		fastcgi_cache_methods GET HEAD;
		fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
		add_header X-FastCGI-Cache $upstream_cache_status;
		add_header Sanweb-Skip $skip_reason;
		add_header Strict-Transport-Security
			"max-age=31536000; includeSubDomains"
			always;

		include fastcgi.conf;
	}

	# Media: images, icons, video, audio, HTC
	location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|mp3|ogg|ogv|webm|htc|woff2|woff)$ {
		expires 1y;
		access_log off;
		# max-age must be in seconds
		add_header Cache-Control "max-age=2629746, public";
	}

	# CSS and Javascript
	location ~* \.(?:css|js)$ {
		expires 1y;
		access_log off;
		add_header Cache-Control "max-age=31556952, public";
	}

	# AND THIS BELOW FOR PURGE ALL
	# location ~ /purgeall {
	# 	fastcgi_pass unix:/var/run/php/php-fpm.sock;
	# 	fastcgi_cache redmonster;
	# 	fastcgi_cache_purge redmonster;
	# }

	location = /robots.txt {
		access_log off;
		log_not_found off;
	}

}