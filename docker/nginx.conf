user www-data;
worker_processes 4;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

# only log critical errors
error_log /var/log/nginx/error.log crit;
events {
	worker_connections 1024;
	# optimized to serve many clients with each thread, essential for linux -- for testing environment
	use epoll;
	# accept as many connections as possible, may flood worker connections if set too low -- for testing environment
	multi_accept on;
}

http {

	map $http_user_agent $mobile_user {
	default	"WPBULLET_DESKTOP";

	"~*ipad"    WPBULLET_MOBILE;
	"~*android.*mobile"   WPBULLET_MOBILE;
	"~*iphone"    WPBULLET_MOBILE;
	"~*ipod.*mobile"   WPBULLET_MOBILE;
	"~*BlackBerry*Mobile Safari"  WPBULLET_MOBILE;
	"~*BB*Mobile Safari"   WPBULLET_MOBILE;
	"~*Opera.*Mini/7"   WPBULLET_MOBILE;
	"~*IEMobile/10.*Touch"   WPBULLET_MOBILE;
	"~*IEMobile/11.*Touch"   WPBULLET_MOBILE;
	"~*IEMobile/7.0"   WPBULLET_MOBILE;
	"~*IEMobile/9.0"   WPBULLET_MOBILE;
	"~*Firefox.*Mobile"   WPBULLET_MOBILE;
	"~*webOS"    WPBULLET_MOBILE;
	}




	fastcgi_cache_path /var/cache/nginx/cache/ levels=1:2 keys_zone=quickwp:100m max_size=10g inactive=60m use_temp_path=off;
	fastcgi_cache_key "$scheme$request_method$host$request_uri";
	limit_req_zone $binary_remote_addr zone=flood:50m rate=90r/s;
	limit_conn_zone $binary_remote_addr zone=addr:50m;

	# cache informations about FDs, frequently accessed files
	# can boost performance, but you need to test those values
	open_file_cache max=200000 inactive=20s;
	open_file_cache_valid 30s;
	open_file_cache_min_uses 2;
	open_file_cache_errors on;
	##
	# Basic Settings
	##

	# copies data between one FD and other from within the kernel
	# faster than read() + write()
	sendfile on;

	# send headers in one piece, it is better than sending them one by one
	tcp_nopush on;
	
	# don't buffer data sent, good for small data bursts in real time
	tcp_nodelay on;

	types_hash_max_size 2048;
	server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	# to boost I/O on HDD we can disable access logs
	access_log off;
	#access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	log_format customuseragent '[$time_local] $remote_addr $upstream_cache_status '
                           '$mobile_user $request_method '
                           '"$request_uri" $upstream_response_time';


	##
	# Gzip Settings
	##

	# reduce the data that needs to be sent over network -- for testing environment
	gzip on;
	# gzip_static on;
	gzip_min_length 256;
	gzip_disable "msie6";
	gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
	gzip_vary on;
	gzip_disable msie6;
	gzip_proxied expired no-cache no-store private auth;
	gzip_types
		text/css
		text/javascript
		text/xml
		text/plain
		text/x-component
		application/javascript
		application/x-javascript
		application/json
		application/xml
		application/rss+xml
		application/atom+xml
		application/x-font-ttf
		font/truetype
		font/opentype
		font/ttf
		font/eot
		font/otf
		application/vnd.ms-fontobject
		image/svg+xml;

	# allow the server to close connection on non responding client, this will free up memory
	reset_timedout_connection on;

	# request timed out -- default 60
	client_body_timeout 10;

	# if client stop responding, free up memory -- default 60
	send_timeout 2;

	# server will close connection after this time -- default 75
	keepalive_timeout 30;

	# number of requests client can make over keep-alive -- for testing environment
	keepalive_requests 100000;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}

